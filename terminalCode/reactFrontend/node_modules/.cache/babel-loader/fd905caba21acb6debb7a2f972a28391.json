{"ast":null,"code":"var _jsxFileName = \"/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Commands extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      command: []\n    };\n\n    this.listenCmd = event => {\n      if (event.key === \"Enter\") {\n        if (this.state.title.split(\" \")[0] === \"ls\") {\n          this.ls();\n        } else {\n          var d = this.state.completePrompt + \" \" + this.state.title;\n          this.addToHistory(this.state.title, d);\n        }\n\n        this.setState({\n          command: this.state.title,\n          title: \"\"\n        });\n      }\n    };\n\n    this.ls = () => {\n      var d = this.state.completePrompt + \" \" + this.state.title + \"\\n\";\n      directory.map(dir => {\n        if (dir.path === this.state.path) {\n          d += dir.name + \" \";\n        }\n      });\n      d += \"\\n\";\n      file.map(file => {\n        if (file.path === this.state.path) {\n          d += file.name + \" \";\n        }\n      });\n      d += \"\\n\";\n      this.addToHistory(this.state.title, d);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Hello\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lineCmd\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Terminal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Commands;","map":{"version":3,"sources":["/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js"],"names":["React","Commands","Component","state","command","listenCmd","event","key","title","split","ls","d","completePrompt","addToHistory","setState","directory","map","dir","path","name","file","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAD2B;;AAAA,SAKnCC,SALmC,GAKvBC,KAAK,IAAI;AACjB,UAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AAEvB,YAAG,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAiC,IAApC,EAAyC;AACrC,eAAKC,EAAL;AACH,SAFD,MAEK;AACD,cAAIC,CAAC,GAAE,KAAKR,KAAL,CAAWS,cAAX,GAA4B,GAA5B,GAAkC,KAAKT,KAAL,CAAWK,KAApD;AACA,eAAKK,YAAL,CAAkB,KAAKV,KAAL,CAAWK,KAA7B,EAAmCG,CAAnC;AACH;;AACD,aAAKG,QAAL,CAAc;AACVV,UAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWK,KADV;AAEVA,UAAAA,KAAK,EAAE;AAFG,SAAd;AAIH;AAEJ,KApBkC;;AAAA,SAsBnCE,EAtBmC,GAsB9B,MAAM;AACP,UAAIC,CAAC,GAAE,KAAKR,KAAL,CAAWS,cAAX,GAA4B,GAA5B,GAAkC,KAAKT,KAAL,CAAWK,KAA7C,GAAqD,IAA5D;AACAO,MAAAA,SAAS,CAACC,GAAV,CAAcC,GAAG,IAAG;AAChB,YAAGA,GAAG,CAACC,IAAJ,KAAa,KAAKf,KAAL,CAAWe,IAA3B,EAAgC;AAC5BP,UAAAA,CAAC,IAAEM,GAAG,CAACE,IAAJ,GAAS,GAAZ;AACH;AACJ,OAJD;AAKAR,MAAAA,CAAC,IAAE,IAAH;AACAS,MAAAA,IAAI,CAACJ,GAAL,CAASI,IAAI,IAAG;AACZ,YAAGA,IAAI,CAACF,IAAL,KAAc,KAAKf,KAAL,CAAWe,IAA5B,EAAiC;AAC7BP,UAAAA,CAAC,IAAES,IAAI,CAACD,IAAL,GAAU,GAAb;AACH;AACJ,OAJD;AAKAR,MAAAA,CAAC,IAAE,IAAH;AACA,WAAKE,YAAL,CAAkB,KAAKV,KAAL,CAAWK,KAA7B,EAAmCG,CAAnC;AAEH,KAtCkC;AAAA;;AAuCnCU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARH;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA,oBADJ;AA0BH;;AAlEkC;;AAsEvC,eAAepB,QAAf","sourcesContent":["import React from \"react\";\n\nclass Commands extends React.Component {\n    state = {\n        command: []\n    }\n\n    listenCmd = event => {\n        if (event.key === \"Enter\") {\n            \n            if(this.state.title.split(\" \")[0]===\"ls\"){\n                this.ls()\n            }else{\n                var d =this.state.completePrompt + \" \" + this.state.title;\n                this.addToHistory(this.state.title,d);\n            }\n            this.setState({\n                command: this.state.title,\n                title: \"\"\n            })\n        }\n\n    }\n    //commands\n    ls = () => {\n        var d =this.state.completePrompt + \" \" + this.state.title + \"\\n\"\n        directory.map(dir =>{\n            if(dir.path === this.state.path){\n                d+=dir.name+\" \";\n            }\n        })\n        d+=\"\\n\"\n        file.map(file =>{\n            if(file.path === this.state.path){\n                d+=file.name+\" \";\n            }\n        })\n        d+=\"\\n\"\n        this.addToHistory(this.state.title,d)  \n        \n    }\n    render() {\n        return (\n            <>\n                <div className=\"output\">\n                    {/* <ul>\n                {this.state.text.split(\"\\n\").map(\n                    his => <li key={uuidv4()}>\n                        <span>{his}</span>\n                    </li>\n                )}\n            </ul> */}\n                   <span>Hello</span>\n                </div>\n                <div className=\"lineCmd\">\n                    <span>Terminal</span>\n                    {/* <span>\n                {this.state.completePrompt}\n            </span>\n            <input type=\"text\" className=\"inputCmd\"\n                value={this.state.title}\n                name=\"title\"\n                onChange={this.onChange}\n                onKeyDown={this.listenCmd}>\n            </input> */}\n                </div>\n            </>\n        )\n    }\n}\n\n\nexport default Commands"]},"metadata":{},"sourceType":"module"}