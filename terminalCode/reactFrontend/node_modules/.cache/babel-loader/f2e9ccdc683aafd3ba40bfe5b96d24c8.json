{"ast":null,"code":"var _jsxFileName = \"/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport directory from \"./directory\";\nimport file from \"./file\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst touch = () => {\n  _s();\n\n  if (this.state.title.split(\" \")[1] !== \"\") {\n    const [files, setFile] = React.useState(file);\n    const newFile = files.concat({\n      name: this.state.title.split(\" \")[1],\n      permissions: \"\",\n      path: this.state.path\n    });\n    setFile(newFile); // file = [...file, newFile];\n\n    file.map(f => {\n      console.log(f.name);\n    });\n  }\n};\n\n_s(touch, \"b935vuaRmwxTYzROE2aJoBL4TJc=\");\n\nclass Commands extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.listenCmd = event => {\n      if (event.key === \"Enter\") {\n        if (this.state.title.split(\" \")[0] === \"ls\") {\n          this.ls();\n        } else if (this.state.title.split(\" \")[0] === \"history\") {\n          this.history();\n        } else if (this.state.title.split(\" \")[0] === \"pwd\") {\n          this.pwd();\n        } else if (this.state.title.split(\" \")[0] === \"cd\") {\n          this.cd();\n        } else if (this.state.title.split(\" \")[0] === \"touch\") {\n          this.touch();\n        } else {\n          var d = this.props.prompt + \" \" + this.state.title;\n          this.props.addCommandPops(d);\n        }\n\n        this.setState({\n          command: this.state.title,\n          title: \"\"\n        });\n      }\n    };\n\n    this.ls = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\\n\";\n      directory.map(dir => {\n        if (dir.path === this.props.path) {\n          d += dir.name + \"     \";\n        }\n      });\n      d += \"\\n\";\n      file.map(file => {\n        if (file.path === this.props.path) {\n          d += file.name + \"      \";\n        }\n      });\n      console.log(d);\n      this.props.addCommandPops(d);\n    };\n\n    this.history = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\\n\";\n      var i = 0;\n      this.props.history.map(his => {\n        if (this.props.history.length - 1 === i) {\n          d += his.title;\n        } else {\n          d += his.title + \"\\n\";\n        }\n\n        i++;\n      });\n      this.props.addCommandPops(d);\n    };\n\n    this.pwd = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\\n\";\n      d += this.props.path;\n      this.props.addCommandPops(d);\n    };\n\n    this.cd = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n\n      if (this.state.title.split(\" \")[0] === \"..\") {\n        this.props.changePathProp(\"/home/user\");\n      } else if (this.state.title.split(\" \")[0] === \"-\") {\n        this.props.changePathProp(this.props.prevPath);\n      } else {\n        directory.map(dir => {\n          if (dir.name === this.state.title.split(\" \")[1] && dir.path === this.props.path) {\n            this.props.changePathProp(this.props.path + \"/\" + dir.name);\n          }\n        });\n      }\n\n      this.props.addCommandPops(d);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lineCmd\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.props.prompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"inputCmd\",\n        value: this.state.title,\n        name: \"title\",\n        onChange: this.onChange,\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            this.listenCmd(e);\n            this.props.addHistoryProps(this.state.title);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Commands; // handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }","map":{"version":3,"sources":["/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js"],"names":["React","v4","uuidv4","directory","file","touch","state","title","split","files","setFile","useState","newFile","concat","name","permissions","path","map","f","console","log","Commands","Component","onChange","e","setState","target","value","listenCmd","event","key","ls","history","pwd","cd","d","props","prompt","addCommandPops","command","dir","i","his","length","changePathProp","prevPath","render","addHistoryProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\"\n\n\nimport directory from \"./directory\"\nimport file from \"./file\"\n\n\nconst touch = () =>{\n    if (this.state.title.split(\" \")[1] !== \"\") {\n        const [files, setFile] = React.useState(file);\n\n        const newFile =files.concat({\n            name:this.state.title.split(\" \")[1],\n            permissions:\"\",\n            path: this.state.path,\n        }); \n    \n        setFile(newFile)\n    // file = [...file, newFile];\n    \n    file.map(f =>{\n        console.log(f.name)\n    })\n       \n    }\n}\nclass Commands extends React.Component {\n    state = {\n        title: \"\",\n    }\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    listenCmd = event => {\n\n        if (event.key === \"Enter\") {\n            if (this.state.title.split(\" \")[0] === \"ls\") {\n                this.ls()\n            }\n            else if (this.state.title.split(\" \")[0] === \"history\") {\n                this.history()\n            } else if (this.state.title.split(\" \")[0] === \"pwd\") {\n                this.pwd()\n            } else if (this.state.title.split(\" \")[0] === \"cd\") {\n                this.cd()\n            }  else if (this.state.title.split(\" \")[0] === \"touch\") {\n                this.touch()\n            }else {\n                var d = this.props.prompt + \" \" + this.state.title;\n                this.props.addCommandPops(d)\n            }\n            this.setState({\n                command: this.state.title,\n                title: \"\"\n            })\n        }\n    }\n    //commands\n    ls = () => {\n\n        var d = this.props.prompt + \" \" + this.state.title + \"\\n\"\n\n        directory.map(dir => {\n            if (dir.path === this.props.path) {\n                d += dir.name + \"     \";\n            }\n        })\n\n        d += \"\\n\"\n        file.map(file => {\n            if (file.path === this.props.path) {\n                d += file.name + \"      \";\n            }\n        })\n        console.log(d)\n        this.props.addCommandPops(d)\n\n    }\n    history = () => {\n        var d = this.props.prompt + \" \" + this.state.title + \"\\n\"\n        var i = 0;\n        this.props.history.map(his => {\n            if (this.props.history.length - 1 === i) {\n                d += his.title\n            } else {\n                d += his.title + \"\\n\"\n            }\n            i++;\n        })\n        this.props.addCommandPops(d)\n    }\n    pwd = () => {\n        var d = this.props.prompt + \" \" + this.state.title + \"\\n\"\n        d += this.props.path\n        this.props.addCommandPops(d)\n    }\n    cd = () => {\n        var d = this.props.prompt + \" \" + this.state.title\n        if (this.state.title.split(\" \")[0] === \"..\") {\n            this.props.changePathProp(\"/home/user\")\n        } else if (this.state.title.split(\" \")[0] === \"-\") {\n            this.props.changePathProp(this.props.prevPath)\n        } else {\n            directory.map(dir => {\n                if (dir.name === this.state.title.split(\" \")[1] && dir.path === this.props.path) {\n                    this.props.changePathProp(this.props.path+\"/\"+dir.name)\n                }\n            })\n        }\n        this.props.addCommandPops(d)\n    }\n    \n    render() {\n       \n        return (\n            <div className=\"lineCmd\">\n                <span>\n                    {this.props.prompt}\n                </span>\n                <input type=\"text\" className=\"inputCmd\"\n                    value={this.state.title}\n                    name=\"title\"\n                    onChange={this.onChange}\n                    onKeyDown={e => {\n                        if (e.key === \"Enter\") {\n                            this.listenCmd(e)\n                            this.props.addHistoryProps(this.state.title)\n                        }\n                    }}>\n                </input>\n            </div>\n        )\n    }\n}\n\n\nexport default Commands\n\n\n// handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }\n"]},"metadata":{},"sourceType":"module"}