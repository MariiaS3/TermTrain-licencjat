{"ast":null,"code":"var _jsxFileName = \"/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Terminal.js\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport directory from \"./directory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Terminal extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      completePrompt: \"user@localhost:~#\",\n      title: \"\",\n      command: \"\",\n      path: \"/home/user\",\n      history: [],\n      text: \"\",\n      allHistory: []\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.addToHistory = title => {\n      const newHistory = {\n        id: uuidv4(),\n        title: title\n      };\n      this.setState({\n        history: [...this.state.history, newHistory],\n        allHistory: [...this.state.history, newHistory],\n        text: this.state.text + this.state.completePrompt + \" \" + title + \"\\n\"\n      });\n    };\n\n    this.addToText = text => {\n      this.setState({\n        text: this.state.text + text + \"\\n\"\n      });\n    };\n\n    this.listenCmd = event => {\n      if (event.key === \"Enter\") {\n        if (this.state.title === \"ls\") {\n          this.ls();\n        }\n\n        this.addToHistory(this.state.title);\n        this.setState({\n          command: this.state.title,\n          title: \"\"\n        });\n      }\n    };\n\n    this.ls = () => {\n      directory.map(dir => {});\n      console.log(directory[0].path);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"termContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.text.split(\"\\n\").map(his => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: his\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lineCmd\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.state.completePrompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"inputCmd\",\n          value: this.state.title,\n          name: \"title\",\n          onChange: this.onChange,\n          onKeyDown: this.listenCmd\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Terminal; // handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }","map":{"version":3,"sources":["/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Terminal.js"],"names":["React","v4","uuidv4","directory","Terminal","Component","state","completePrompt","title","command","path","history","text","allHistory","onChange","e","setState","target","name","value","addToHistory","newHistory","id","addToText","listenCmd","event","key","ls","map","dir","console","log","render","split","his"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\"\nimport directory from \"./directory\"\n\nclass Terminal extends React.Component {\n    state = {\n        completePrompt: \"user@localhost:~#\",\n        title: \"\",\n        command: \"\",\n        path: \"/home/user\",\n        history: [],\n        text: \"\",\n        allHistory: []\n    }\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n    addToHistory = title => {\n        const newHistory = {\n            id: uuidv4(),\n            title: title\n        }\n        this.setState({\n            history: [...this.state.history, newHistory],\n            allHistory: [...this.state.history, newHistory],\n            text: this.state.text + this.state.completePrompt + \" \" + title + \"\\n\"\n        })\n    }\n    addToText = text => {\n        this.setState({\n            text: this.state.text + text + \"\\n\"\n        })\n    }\n    listenCmd = event => {\n        if (event.key === \"Enter\") {\n            if(this.state.title===\"ls\"){\n                this.ls()\n            }\n            this.addToHistory(this.state.title)\n            this.setState({\n                command: this.state.title,\n                title: \"\"\n            })\n        }\n\n    }\n    //commands\n    ls = () => {\n        directory.map(dir =>{\n            \n        })\n        console.log(directory[0].path)\n        \n    }\n\n    render() {\n        return (\n            <div className=\"termContainer\">\n                <div className=\"output\">\n                    <ul>\n                        {this.state.text.split(\"\\n\").map(\n                            his => <li key={uuidv4()}>\n                                <span>{his}</span>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n                <div className=\"lineCmd\">\n                    <span>\n                        {this.state.completePrompt}\n                    </span>\n                    <input type=\"text\" className=\"inputCmd\"\n                        value={this.state.title}\n                        name=\"title\"\n                        onChange={this.onChange}\n                        onKeyDown={this.listenCmd}>\n                    </input>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Terminal\n\n\n\n\n// handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }\n"]},"metadata":{},"sourceType":"module"}