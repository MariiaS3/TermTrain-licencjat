{"ast":null,"code":"var _jsxFileName = \"/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport directory from \"./directory\";\nimport file from \"./file\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Commands extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.listenCmd = event => {\n      if (event.key === \"Enter\") {\n        if (this.state.title.split(\" \")[0] === \"ls\") {\n          this.ls();\n        } else {\n          var d = this.props.prompt + \" \" + this.state.title;\n          this.props.addCommandPops(d);\n        }\n\n        this.setState({\n          command: this.state.title,\n          title: \"\"\n        });\n      }\n\n      for (var i = 0; i < this.props.command.length; i++) {\n        console.log(this.props.command[i].text + \" ++++++++++hello+++++++++ \");\n      }\n    };\n\n    this.ls = () => {\n      var d = this.state.completePrompt + \" \" + this.state.title + \"\\n\";\n      directory.map(dir => {\n        if (dir.path === this.state.path) {\n          d += dir.name + \" \";\n        }\n      });\n      d += \"\\n\";\n      file.map(file => {\n        if (file.path === this.state.path) {\n          d += file.name + \" \";\n        }\n      });\n      d += \"\\n\"; // this.addToHistory(this.state.title, d)\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"helllo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lineCmd\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: this.props.prompt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"inputCmd\",\n          value: this.state.title,\n          name: \"title\",\n          onChange: this.onChange,\n          onKeyDown: e => {\n            if (e.key === \"Enter\") {\n              this.listenCmd(e);\n              this.props.addHistoryProps(this.state.title);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Commands; // handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }","map":{"version":3,"sources":["/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js"],"names":["React","v4","uuidv4","directory","file","Commands","Component","state","title","onChange","e","setState","target","name","value","listenCmd","event","key","split","ls","d","props","prompt","addCommandPops","command","i","length","console","log","text","completePrompt","map","dir","path","render","addHistoryProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\"\n\n\nimport directory from \"./directory\"\nimport file from \"./file\"\n\n\nclass Commands extends React.Component {\n    state = {\n        title: \"\",\n    }\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    listenCmd = event => {\n\n        if (event.key === \"Enter\") {\n            if (this.state.title.split(\" \")[0] === \"ls\") {\n                this.ls()\n            } else {\n                var d = this.props.prompt + \" \" + this.state.title;\n                this.props.addCommandPops(d)\n            }\n            this.setState({\n                command: this.state.title,\n                title: \"\"\n            })\n        }\n        for(var i=0;i<this.props.command.length;i++){\n            console.log(this.props.command[i].text + \" ++++++++++hello+++++++++ \")\n        }\n\n    }\n    //commands\n    ls = () => {\n        var d = this.state.completePrompt + \" \" + this.state.title + \"\\n\"\n        directory.map(dir => {\n            if (dir.path === this.state.path) {\n                d += dir.name + \" \";\n            }\n        })\n        d += \"\\n\"\n        file.map(file => {\n            if (file.path === this.state.path) {\n                d += file.name + \" \";\n            }\n        })\n        d += \"\\n\"\n        // this.addToHistory(this.state.title, d)\n\n    }\n    render() {\n        return (\n            <div className=\"output\">\n                {/* <ul>\n              {this.state.history.map(his => \n              <li key={uuidv4()}>\n                        <span>{his.title}</span>\n                    </li>\n              )}\n            </ul> */}\n            <a>helllo</a>\n                {/* <ul>\n                    {this.props.command.map(cmd =>{\n                        <li key={cmd.id}>\n                            <span>{cmd.text}</span>\n                            </li>\n                    })}\n                </ul> */}\n                <div className=\"lineCmd\">\n                    <span>\n                        {this.props.prompt}\n                    </span>\n                    <input type=\"text\" className=\"inputCmd\"\n                        value={this.state.title}\n                        name=\"title\"\n                        onChange={this.onChange}\n                        onKeyDown={e => {\n                            if (e.key === \"Enter\") {\n                                this.listenCmd(e)\n                                this.props.addHistoryProps(this.state.title)\n\n                            }\n                        }}>\n                    </input>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Commands\n\n\n// handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }\n"]},"metadata":{},"sourceType":"module"}