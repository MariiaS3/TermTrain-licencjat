{"ast":null,"code":"var _jsxFileName = \"/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport directory from \"./directory\";\nimport file from \"./file\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Commands extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.listenCmd = event => {\n      if (event.key === \"Enter\") {\n        if (this.state.title.split(\" \")[0] === \"ls\") {\n          this.ls();\n        } else {\n          var d = this.props.prompt + \" \" + this.state.title;\n          this.props.addCommandPops(d);\n        }\n\n        this.setState({\n          command: this.state.title,\n          title: \"\"\n        });\n      } // this.props.command.map(cmd => {\n      //     console.log(cmd.text + \" ++++++++++hello+++++++++ \")\n      // }\n      // )\n\n    };\n\n    this.ls = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\";\n      directory.map(dir => {\n        if (dir.path === this.props.path) {\n          d += dir.name + \" \";\n        }\n      });\n      d += \"\\n\";\n      file.map(file => {\n        if (file.path === this.props.path) {\n          d += file.name + \" \";\n        }\n      });\n      d += \"\\n\";\n      this.props.addCommandPops(d);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lineCmd\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.props.prompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"inputCmd\",\n        value: this.state.title,\n        name: \"title\",\n        onChange: this.onChange,\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            this.listenCmd(e);\n            this.props.addHistoryProps(this.state.title);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Commands; // handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }","map":{"version":3,"sources":["/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js"],"names":["React","v4","uuidv4","directory","file","Commands","Component","state","title","onChange","e","setState","target","name","value","listenCmd","event","key","split","ls","d","props","prompt","addCommandPops","command","map","dir","path","render","addHistoryProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\"\n\n\nimport directory from \"./directory\"\nimport file from \"./file\"\n\n\nclass Commands extends React.Component {\n    state = {\n        title: \"\",\n    }\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    listenCmd = event => {\n\n        if (event.key === \"Enter\") {\n            if (this.state.title.split(\" \")[0] === \"ls\") {\n                this.ls()\n            } else {\n                var d = this.props.prompt + \" \" + this.state.title;\n                this.props.addCommandPops(d)\n            }\n            this.setState({\n                command: this.state.title,\n                title: \"\"\n            })\n        }\n        // this.props.command.map(cmd => {\n        //     console.log(cmd.text + \" ++++++++++hello+++++++++ \")\n        // }\n        // )\n    }\n    //commands\n    ls = () => {\n        var d = this.props.prompt + \" \" + this.state.title + \"\"\n        directory.map(dir => {\n            if (dir.path === this.props.path) {\n                d += dir.name + \" \";\n            }\n        })\n        d += \"\\n\"\n        file.map(file => {\n            if (file.path === this.props.path) {\n                d += file.name + \" \";\n            }\n        })\n        d += \"\\n\"\n        this.props.addCommandPops(d)\n\n    }\n    render() {\n        return (\n                <div className=\"lineCmd\">\n                    <span>\n                        {this.props.prompt}\n                    </span>\n                    <input type=\"text\" className=\"inputCmd\"\n                        value={this.state.title}\n                        name=\"title\"\n                        onChange={this.onChange}\n                        onKeyDown={e => {\n                            if (e.key === \"Enter\") {\n                                this.listenCmd(e)\n                                this.props.addHistoryProps(this.state.title)\n\n                            }\n                        }}>\n                    </input>\n                </div>\n        )\n    }\n}\n\n\nexport default Commands\n\n\n// handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }\n"]},"metadata":{},"sourceType":"module"}