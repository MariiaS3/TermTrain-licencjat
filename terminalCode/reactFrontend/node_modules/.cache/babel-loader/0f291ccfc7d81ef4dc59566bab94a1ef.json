{"ast":null,"code":"var _jsxFileName = \"/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/questions/QuestionListItem.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport QuestionItem from \"./QuestionItem\";\nimport AnswerListItem from \"./AnswerListItem\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionListItem extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      currentQuestion: 0,\n      score: 0,\n      showScore: false,\n      quest: []\n    };\n\n    this.answerClick = isCorrect => {\n      if (isCorrect) {\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      const nextQuestion = this.state.currentQuestion + 1;\n\n      if (nextQuestion < this.state.quest.length) {\n        this.setState({\n          currentQuestion: nextQuestion\n        });\n      } else {\n        this.setState({\n          showScore: true\n        });\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const QUIZ_API_BASE_URL = \"http://localhost:8080/api/quiz/\" + `${this.props.id}` + \"/question\";\n    const response = await axios.get(QUIZ_API_BASE_URL);\n    this.setState({\n      quest: response.data\n    });\n    console.log(response.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: this.state.showScore ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-section\",\n        children: [\"You scored \", this, \" out of \", this.state.quest.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this) : this.state.quest.map(quiz => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: this.state.quest[this.state.currentQuestion].text === quiz.text ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(QuestionItem, {\n            quest: quiz\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 98\n          }, this), /*#__PURE__*/_jsxDEV(AnswerListItem, {\n            id: quiz.id,\n            answerClickProps: this.answerClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 92\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 104\n        }, this)\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default QuestionListItem;","map":{"version":3,"sources":["/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/questions/QuestionListItem.js"],"names":["React","axios","QuestionItem","AnswerListItem","v4","uuidv4","QuestionListItem","Component","state","currentQuestion","score","showScore","quest","answerClick","isCorrect","setState","nextQuestion","length","componentDidMount","QUIZ_API_BASE_URL","props","id","response","get","data","console","log","render","map","quiz","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AAEA,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACJC,MAAAA,eAAe,EAAE,CADb;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,SAAS,EAAE,KAHP;AAIJC,MAAAA,KAAK,EAAE;AAJH,KADmC;;AAAA,SAgB3CC,WAhB2C,GAgB5BC,SAAD,IAAc;AACxB,UAAGA,SAAH,EAAa;AACT,aAAKC,QAAL,CAAc;AACVL,UAAAA,KAAK,EAAC,KAAKF,KAAL,CAAWE,KAAX,GAAiB;AADb,SAAd;AAGH;;AAED,YAAMM,YAAY,GAAG,KAAKR,KAAL,CAAWC,eAAX,GAA2B,CAAhD;;AAEA,UAAGO,YAAY,GAAE,KAAKR,KAAL,CAAWI,KAAX,CAAiBK,MAAlC,EAA0C;AACtC,aAAKF,QAAL,CAAc;AACVN,UAAAA,eAAe,EAACO;AADN,SAAd;AAGH,OAJD,MAIK;AACD,aAAKD,QAAL,CAAc;AACVJ,UAAAA,SAAS,EAAC;AADA,SAAd;AAGH;AACJ,KAlC0C;AAAA;;AASpB,QAAjBO,iBAAiB,GAAG;AACtB,UAAMC,iBAAiB,GAAG,oCAAqC,GAAE,KAAKC,KAAL,CAAWC,EAAG,EAArD,GAAyD,WAAnF;AACA,UAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAUJ,iBAAV,CAAvB;AACA,SAAKJ,QAAL,CAAc;AAAEH,MAAAA,KAAK,EAAEU,QAAQ,CAACE;AAAlB,KAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACE,IAArB;AACH;;AAsBDG,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,gBACK,KAAKnB,KAAL,CAAWG,SAAX,gBACb;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kCACa,IADb,cAC2B,KAAKH,KAAL,CAAWI,KAAX,CAAiBK,MAD5C;AAAA;AAAA;AAAA;AAAA;AAAA,cADa,GAKD,KAAKT,KAAL,CAAWI,KAAX,CAAiBgB,GAAjB,CAAqBC,IAAI,iBACrB;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACK,KAAKrB,KAAL,CAAWI,KAAX,CAAiB,KAAKJ,KAAL,CAAWC,eAA5B,EAA6CqB,IAA7C,KAAsDD,IAAI,CAACC,IAA3D,gBAAkE;AAAA,kCAAM,QAAC,YAAD;AACrE,YAAA,KAAK,EAAED;AAD8D;AAAA;AAAA;AAAA;AAAA,kBAAN,eAE/D,QAAC,cAAD;AAAgB,YAAA,EAAE,EAAEA,IAAI,CAACR,EAAzB;AAA6B,YAAA,gBAAgB,EAAE,KAAKR;AAApD;AAAA;AAAA;AAAA;AAAA,kBAF+D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAlE,gBAE8E;AAAA,oBAAM,KAAKL,KAAL,CAAWE;AAAjB;AAAA;AAAA;AAAA;AAAA;AAHnF,SAAgCL,MAAM,EAAtC;AAAA;AAAA;AAAA;AAAA,cADJ;AANJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAtD0C;;AAyD/C,eAAeC,gBAAf","sourcesContent":["import React from \"react\";\n\nimport axios from \"axios\";\nimport QuestionItem from \"./QuestionItem\"\nimport AnswerListItem from \"./AnswerListItem\"\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass QuestionListItem extends React.Component {\n    state = {\n        currentQuestion: 0,\n        score: 0,\n        showScore: false,\n        quest: [],\n    };\n\n\n    async componentDidMount() {\n        const QUIZ_API_BASE_URL = \"http://localhost:8080/api/quiz/\" + `${this.props.id}` + \"/question\";\n        const response = await axios.get(QUIZ_API_BASE_URL);\n        this.setState({ quest: response.data });\n        console.log(response.data)\n    }\n\n    answerClick = (isCorrect) =>{\n        if(isCorrect){\n            this.setState({\n                score:this.state.score+1\n            })\n        }\n\n        const nextQuestion = this.state.currentQuestion+1;\n\n        if(nextQuestion <this.state.quest.length ){\n            this.setState({\n                currentQuestion:nextQuestion\n            })\n        }else{\n            this.setState({\n                showScore:true\n            })\n        }\n    }\n\n    render() {\n\n        return (\n            <ul>\n                {this.state.showScore ? (\n\t\t\t\t<div className='score-section'>\n\t\t\t\t\tYou scored {this} out of {this.state.quest.length}\n\t\t\t\t</div>\n\t\t\t) : (\n                this.state.quest.map(quiz => (\n                    <div className=\"container\" key={uuidv4()}>\n                        {this.state.quest[this.state.currentQuestion].text === quiz.text ? <div ><QuestionItem\n                            quest={quiz} />\n                            <AnswerListItem id={quiz.id} answerClickProps={this.answerClick}/></div> : <div>{this.state.score}</div>}\n                    </div>\n                )))}\n            </ul>\n        )\n    }\n}\n\nexport default QuestionListItem"]},"metadata":{},"sourceType":"module"}