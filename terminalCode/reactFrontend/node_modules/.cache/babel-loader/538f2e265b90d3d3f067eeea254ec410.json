{"ast":null,"code":"var _jsxFileName = \"/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Terminal.js\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Commands from \"./Commands\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Terminal extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      prompt: \"user@localhost:~#\",\n      path: \"/home/user\",\n      history: []\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.addToHistory = title => {\n      const newHistory = {\n        id: uuidv4(),\n        title: title\n      };\n      this.setState({\n        history: [...this.state.history, newHistory] // text: this.state.text.concat(text)//this.state.text + this.state.completePrompt + \" \" + title + \"\\n\"\n\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"termContainer\",\n      children: /*#__PURE__*/_jsxDEV(Commands, {\n        addToHistoryProps: this.addToHistory,\n        prompt: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Terminal; // handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }","map":{"version":3,"sources":["/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Terminal.js"],"names":["React","v4","uuidv4","Commands","Terminal","Component","state","prompt","path","history","onChange","e","setState","target","name","value","addToHistory","title","newHistory","id","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,MAAM,EAAE,mBADJ;AAEJC,MAAAA,IAAI,EAAE,YAFF;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAD2B;;AAAA,SAMnCC,QANmC,GAMxBC,CAAC,IAAI;AACZ,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADhB,OAAd;AAGH,KAVkC;;AAAA,SAWnCC,YAXmC,GAWnBC,KAAD,IAAW;AACtB,YAAMC,UAAU,GAAG;AACfC,QAAAA,EAAE,EAAEjB,MAAM,EADK;AAEfe,QAAAA,KAAK,EAAEA;AAFQ,OAAnB;AAIA,WAAKL,QAAL,CAAc;AACVH,QAAAA,OAAO,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,OAAf,EAAwBS,UAAxB,CADC,CAEV;;AAFU,OAAd;AAIH,KApBkC;AAAA;;AAsBnCE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,iBAAiB,EAAE,KAAKJ,YAAlC;AAAgD,QAAA,MAAM;AAAtD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA5BkC;;AAgCvC,eAAeZ,QAAf,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\"\nimport Commands from \"./Commands\";\n\nclass Terminal extends React.Component {\n    state = {\n        prompt: \"user@localhost:~#\",\n        path: \"/home/user\",\n        history: [],\n    }\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n    addToHistory = (title) => {\n        const newHistory = {\n            id: uuidv4(),\n            title: title\n        }\n        this.setState({\n            history: [...this.state.history, newHistory],\n            // text: this.state.text.concat(text)//this.state.text + this.state.completePrompt + \" \" + title + \"\\n\"\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"termContainer\">\n                <Commands addToHistoryProps={this.addToHistory} prompt/>\n            </div>\n        )\n    }\n}\n\n\nexport default Terminal\n\n\n\n\n// handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }\n"]},"metadata":{},"sourceType":"module"}