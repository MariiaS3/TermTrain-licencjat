{"ast":null,"code":"var _jsxFileName = \"/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport directory from \"./directory\";\nimport file from \"./file\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Commands extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.listenCmd = event => {\n      if (event.key === \"Enter\") {\n        if (this.state.title.split(\" \")[0] === \"ls\") {\n          this.ls();\n        } else if (this.state.title.split(\" \")[0] === \"history\") {\n          this.history();\n        } else if (this.state.title.split(\" \")[0] === \"pwd\") {\n          this.pwd();\n        } else if (this.state.title.split(\" \")[0] === \"cd\") {\n          this.cd();\n        } else if (this.state.title.split(\" \")[0] === \"touch\") {\n          this.touch();\n        } else if (this.state.title.split(\" \")[0] === \"mv\") {\n          this.mv();\n        } else if (this.state.title.split(\" \")[0] === \"mkdir\") {\n          this.mkdir();\n        } else if (this.state.title.split(\" \")[0] === \"rmdir\") {\n          this.rmdir();\n        } else if (this.state.title.split(\" \")[0] === \"rm\") {\n          this.rm();\n        } else {\n          var d = this.props.prompt + \" \" + this.state.title;\n          this.props.addCommandPops(d);\n        }\n\n        this.setState({\n          command: this.state.title,\n          title: \"\"\n        });\n      }\n    };\n\n    this.ls = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\\n\";\n      var isDirectory = false;\n      directory.map(dir => {\n        if (dir.path === this.props.path) {\n          d += dir.name + \"     \";\n          isDirectory = true;\n        }\n      });\n\n      if (isDirectory === true) {\n        d += \"\\n\";\n      }\n\n      file.map(file => {\n        if (file.path === this.props.path) {\n          d += file.name + \"      \";\n        }\n      });\n      console.log(d);\n      this.props.addCommandPops(d);\n    };\n\n    this.history = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\\n\";\n      var i = 0;\n      this.props.history.map(his => {\n        if (this.props.history.length - 1 === i) {\n          d += his.title;\n        } else {\n          d += his.title + \"\\n\";\n        }\n\n        i++;\n      });\n      this.props.addCommandPops(d);\n    };\n\n    this.pwd = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\\n\";\n      d += this.props.path;\n      this.props.addCommandPops(d);\n    };\n\n    this.cd = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n\n      if (this.state.title.split(\" \")[1] === \"..\") {\n        this.props.changePathProp(\"/home/user\");\n      } else if (this.state.title.split(\" \")[1] === \"-\") {\n        this.props.changePathProp(this.props.prevPath);\n      } else {\n        directory.map(dir => {\n          if (dir.name === this.state.title.split(\" \")[1] && dir.path === this.props.path) {\n            this.props.changePathProp(this.props.path + \"/\" + dir.name);\n          }\n        });\n      }\n\n      this.props.addCommandPops(d);\n    };\n\n    this.touch = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n      var addFile = true;\n      file.map(f => {\n        if (this.props.path === f.path && this.state.title.split(\" \")[1] === f.name) {\n          addFile = false;\n        }\n      });\n\n      if (this.state.title.split(\" \")[1] !== \"\" && addFile === true) {\n        const newFile = {\n          name: this.state.title.split(\" \")[1],\n          permissions: \"\",\n          path: this.props.path,\n          text: \"\"\n        };\n        file.push(newFile);\n      } // file.map(f =>{\n      //     console.log(f.name)\n      // })\n\n\n      this.props.addCommandPops(d);\n    };\n\n    this.mv = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n\n      if (this.state.title.split(\" \")[1] !== \"\") {\n        var isDirectory = true;\n        file.map(f => {\n          if (f.name === this.state.title.split(\" \")[1] && f.path === this.props.path) {\n            directory.map(dir => {\n              if (dir.name === this.state.title.split(\" \")[2]) {\n                f.path += \"/\" + this.state.title.split(\" \")[2];\n                isDirectory = false;\n              }\n            });\n\n            if (isDirectory === true) {\n              f.name = this.state.title.split(\" \")[2];\n            }\n          }\n        });\n      }\n\n      file.map(f => {\n        console.log(f.name + \"    \" + f.path);\n      });\n      this.props.addCommandPops(d);\n    };\n\n    this.mkdir = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n      var addDir = true;\n      directory.map(dir => {\n        if (this.props.path === dir.path && this.state.title.split(\" \")[1] === dir.name) {\n          addDir = false;\n        }\n      });\n\n      if (this.state.title.split(\" \")[1] !== \"\" && addDir === true) {\n        const newDir = {\n          name: this.state.title.split(\" \")[1],\n          permissions: \"\",\n          path: this.props.path\n        };\n        directory.push(newDir);\n      } // directory.map(f =>{\n      //     console.log(f.name)\n      // })\n\n\n      this.props.addCommandPops(d);\n    };\n\n    this.rmdir = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n      var deleteDir = false;\n      directory.map(dir => {\n        if (this.props.path === dir.path && this.state.title.split(\" \")[1] === dir.name) {\n          deleteDir = true;\n        }\n      });\n\n      if (this.state.title.split(\" \")[1] !== \"\" && deleteDir === true) {\n        for (var i = 0; i < directory.length; i++) {\n          if (this.state.title.split(\" \")[1] === directory[i].name) {\n            directory.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      this.props.addCommandPops(d);\n    };\n\n    this.rm = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n      var isDir = false;\n      var isFile = false;\n      directory.map(dir => {\n        if (this.props.path === dir.path && this.state.title.split(\" \")[1] === dir.name) {\n          isDir = true;\n        }\n      });\n\n      if (this.state.title.split(\" \")[1] !== \"\" && isDir === true) {\n        for (var i = 0; i < directory.length; i++) {\n          if (this.state.title.split(\" \")[1] === directory[i].name) {\n            directory.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      if (isDir === false) {\n        file.map(f => {\n          if (this.props.path === f.path && this.state.title.split(\" \")[1] === f.name) {\n            isFile = true;\n          }\n        });\n\n        if (this.state.title.split(\" \")[1] !== \"\" && isFile === true) {\n          for (var i = 0; i < file.length; i++) {\n            if (this.state.title.split(\" \")[1] === file[i].name) {\n              file.splice(i, 1);\n              break;\n            }\n          }\n        }\n      }\n\n      this.props.addCommandPops(d);\n    };\n\n    this.cat = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\\n\";\n      file.map(f => {\n        if (this.props.path === f.path && this.state.title.split(\" \")[1] === f.name) {\n          d += f;\n        }\n      });\n      this.props.addCommandPops(d);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lineCmd\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.props.prompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"inputCmd\",\n        value: this.state.title,\n        name: \"title\",\n        onChange: this.onChange,\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            this.listenCmd(e);\n            this.props.addHistoryProps(this.state.title);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Commands; // handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }","map":{"version":3,"sources":["/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js"],"names":["React","v4","uuidv4","directory","file","Commands","Component","state","title","onChange","e","setState","target","name","value","listenCmd","event","key","split","ls","history","pwd","cd","touch","mv","mkdir","rmdir","rm","d","props","prompt","addCommandPops","command","isDirectory","map","dir","path","console","log","i","his","length","changePathProp","prevPath","addFile","f","newFile","permissions","text","push","addDir","newDir","deleteDir","splice","isDir","isFile","cat","render","addHistoryProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAIA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,KAAK,EAAE;AADH,KAD2B;;AAAA,SAInCC,QAJmC,GAIxBC,CAAC,IAAI;AACZ,WAAKC,QAAL,CAAc;AACV,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADhB,OAAd;AAGH,KARkC;;AAAA,SAUnCC,SAVmC,GAUvBC,KAAK,IAAI;AAEjB,UAAIA,KAAK,CAACC,GAAN,KAAc,OAAlB,EAA2B;AACvB,YAAI,KAAKV,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,IAAvC,EAA6C;AACzC,eAAKC,EAAL;AACH,SAFD,MAGK,IAAI,KAAKZ,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,SAAvC,EAAkD;AACnD,eAAKE,OAAL;AACH,SAFI,MAEE,IAAI,KAAKb,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,KAAvC,EAA8C;AACjD,eAAKG,GAAL;AACH,SAFM,MAEA,IAAI,KAAKd,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,IAAvC,EAA6C;AAChD,eAAKI,EAAL;AACH,SAFM,MAEA,IAAI,KAAKf,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,OAAvC,EAAgD;AACnD,eAAKK,KAAL;AACH,SAFM,MAEA,IAAI,KAAKhB,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,IAAvC,EAA6C;AAChD,eAAKM,EAAL;AACH,SAFM,MAEA,IAAI,KAAKjB,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,OAAvC,EAAgD;AACnD,eAAKO,KAAL;AACH,SAFM,MAEA,IAAI,KAAKlB,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,OAAvC,EAAgD;AACnD,eAAKQ,KAAL;AACH,SAFM,MAEA,IAAI,KAAKnB,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,IAAvC,EAA6C;AAChD,eAAKS,EAAL;AACH,SAFM,MAEA;AACH,cAAIC,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAA7C;AACA,eAAKqB,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AACH;;AACD,aAAKjB,QAAL,CAAc;AACVqB,UAAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWC,KADV;AAEVA,UAAAA,KAAK,EAAE;AAFG,SAAd;AAIH;AACJ,KAzCkC;;AAAA,SA2CnCW,EA3CmC,GA2C9B,MAAM;AAEP,UAAIS,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAArC,GAA6C,IAArD;AACA,UAAIyB,WAAW,GAAG,KAAlB;AACA9B,MAAAA,SAAS,CAAC+B,GAAV,CAAcC,GAAG,IAAI;AACjB,YAAIA,GAAG,CAACC,IAAJ,KAAa,KAAKP,KAAL,CAAWO,IAA5B,EAAkC;AAC9BR,UAAAA,CAAC,IAAIO,GAAG,CAACtB,IAAJ,GAAW,OAAhB;AACAoB,UAAAA,WAAW,GAAG,IAAd;AACH;AACJ,OALD;;AAMA,UAAIA,WAAW,KAAK,IAApB,EAA0B;AACtBL,QAAAA,CAAC,IAAI,IAAL;AACH;;AACDxB,MAAAA,IAAI,CAAC8B,GAAL,CAAS9B,IAAI,IAAI;AACb,YAAIA,IAAI,CAACgC,IAAL,KAAc,KAAKP,KAAL,CAAWO,IAA7B,EAAmC;AAC/BR,UAAAA,CAAC,IAAIxB,IAAI,CAACS,IAAL,GAAY,QAAjB;AACH;AACJ,OAJD;AAKAwB,MAAAA,OAAO,CAACC,GAAR,CAAYV,CAAZ;AACA,WAAKC,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AAEH,KAhEkC;;AAAA,SAiEnCR,OAjEmC,GAiEzB,MAAM;AACZ,UAAIQ,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAArC,GAA6C,IAArD;AACA,UAAI+B,CAAC,GAAG,CAAR;AACA,WAAKV,KAAL,CAAWT,OAAX,CAAmBc,GAAnB,CAAuBM,GAAG,IAAI;AAC1B,YAAI,KAAKX,KAAL,CAAWT,OAAX,CAAmBqB,MAAnB,GAA4B,CAA5B,KAAkCF,CAAtC,EAAyC;AACrCX,UAAAA,CAAC,IAAIY,GAAG,CAAChC,KAAT;AACH,SAFD,MAEO;AACHoB,UAAAA,CAAC,IAAIY,GAAG,CAAChC,KAAJ,GAAY,IAAjB;AACH;;AACD+B,QAAAA,CAAC;AACJ,OAPD;AAQA,WAAKV,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AACH,KA7EkC;;AAAA,SA8EnCP,GA9EmC,GA8E7B,MAAM;AACR,UAAIO,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAArC,GAA6C,IAArD;AACAoB,MAAAA,CAAC,IAAI,KAAKC,KAAL,CAAWO,IAAhB;AACA,WAAKP,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AACH,KAlFkC;;AAAA,SAmFnCN,EAnFmC,GAmF9B,MAAM;AACP,UAAIM,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAA7C;;AACA,UAAI,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,IAAvC,EAA6C;AACzC,aAAKW,KAAL,CAAWa,cAAX,CAA0B,YAA1B;AACH,OAFD,MAEO,IAAI,KAAKnC,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,GAAvC,EAA4C;AAC/C,aAAKW,KAAL,CAAWa,cAAX,CAA0B,KAAKb,KAAL,CAAWc,QAArC;AACH,OAFM,MAEA;AACHxC,QAAAA,SAAS,CAAC+B,GAAV,CAAcC,GAAG,IAAI;AACjB,cAAIA,GAAG,CAACtB,IAAJ,KAAa,KAAKN,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAb,IAA+CiB,GAAG,CAACC,IAAJ,KAAa,KAAKP,KAAL,CAAWO,IAA3E,EAAiF;AAC7E,iBAAKP,KAAL,CAAWa,cAAX,CAA0B,KAAKb,KAAL,CAAWO,IAAX,GAAkB,GAAlB,GAAwBD,GAAG,CAACtB,IAAtD;AACH;AACJ,SAJD;AAKH;;AACD,WAAKgB,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AACH,KAjGkC;;AAAA,SAkGnCL,KAlGmC,GAkG3B,MAAM;AACV,UAAIK,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAA7C;AACA,UAAIoC,OAAO,GAAG,IAAd;AACAxC,MAAAA,IAAI,CAAC8B,GAAL,CAASW,CAAC,IAAI;AACV,YAAI,KAAKhB,KAAL,CAAWO,IAAX,KAAoBS,CAAC,CAACT,IAAtB,IAA8B,KAAK7B,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC2B,CAAC,CAAChC,IAAvE,EAA6E;AACzE+B,UAAAA,OAAO,GAAG,KAAV;AACH;AACJ,OAJD;;AAKA,UAAI,KAAKrC,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,EAAnC,IAAyC0B,OAAO,KAAK,IAAzD,EAA+D;AAE3D,cAAME,OAAO,GAAG;AACZjC,UAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CADM;AAEZ6B,UAAAA,WAAW,EAAE,EAFD;AAGZX,UAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWO,IAHL;AAIZY,UAAAA,IAAI,EAAC;AAJO,SAAhB;AAOA5C,QAAAA,IAAI,CAAC6C,IAAL,CAAUH,OAAV;AACH,OAlBS,CAmBV;AACA;AACA;;;AACA,WAAKjB,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AACH,KAzHkC;;AAAA,SA0HnCJ,EA1HmC,GA0H9B,MAAM;AACP,UAAII,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAA7C;;AACA,UAAI,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,EAAvC,EAA2C;AACvC,YAAIe,WAAW,GAAG,IAAlB;AACA7B,QAAAA,IAAI,CAAC8B,GAAL,CAASW,CAAC,IAAI;AACV,cAAIA,CAAC,CAAChC,IAAF,KAAW,KAAKN,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAX,IAA6C2B,CAAC,CAACT,IAAF,KAAW,KAAKP,KAAL,CAAWO,IAAvE,EAA6E;AACzEjC,YAAAA,SAAS,CAAC+B,GAAV,CAAcC,GAAG,IAAI;AACjB,kBAAIA,GAAG,CAACtB,IAAJ,KAAa,KAAKN,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAjB,EAAiD;AAC7C2B,gBAAAA,CAAC,CAACT,IAAF,IAAU,MAAM,KAAK7B,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAhB;AACAe,gBAAAA,WAAW,GAAG,KAAd;AACH;AACJ,aALD;;AAMA,gBAAIA,WAAW,KAAK,IAApB,EAA0B;AACtBY,cAAAA,CAAC,CAAChC,IAAF,GAAS,KAAKN,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAT;AACH;AACJ;AACJ,SAZD;AAaH;;AAEDd,MAAAA,IAAI,CAAC8B,GAAL,CAASW,CAAC,IAAI;AACVR,QAAAA,OAAO,CAACC,GAAR,CAAYO,CAAC,CAAChC,IAAF,GAAS,MAAT,GAAkBgC,CAAC,CAACT,IAAhC;AACH,OAFD;AAGA,WAAKP,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AACH,KAjJkC;;AAAA,SAkJnCH,KAlJmC,GAkJ3B,MAAM;AACV,UAAIG,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAA7C;AACA,UAAI0C,MAAM,GAAG,IAAb;AACA/C,MAAAA,SAAS,CAAC+B,GAAV,CAAcC,GAAG,IAAI;AACjB,YAAI,KAAKN,KAAL,CAAWO,IAAX,KAAoBD,GAAG,CAACC,IAAxB,IAAgC,KAAK7B,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmCiB,GAAG,CAACtB,IAA3E,EAAiF;AAC7EqC,UAAAA,MAAM,GAAG,KAAT;AACH;AACJ,OAJD;;AAKA,UAAI,KAAK3C,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,EAAnC,IAAyCgC,MAAM,KAAK,IAAxD,EAA8D;AAE1D,cAAMC,MAAM,GAAG;AACXtC,UAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CADK;AAEX6B,UAAAA,WAAW,EAAE,EAFF;AAGXX,UAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWO;AAHN,SAAf;AAMAjC,QAAAA,SAAS,CAAC8C,IAAV,CAAeE,MAAf;AACH,OAjBS,CAkBV;AACA;AACA;;;AACA,WAAKtB,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AACH,KAxKkC;;AAAA,SAyKnCF,KAzKmC,GAyK3B,MAAM;AACV,UAAIE,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAA7C;AACA,UAAI4C,SAAS,GAAG,KAAhB;AACAjD,MAAAA,SAAS,CAAC+B,GAAV,CAAcC,GAAG,IAAI;AACjB,YAAI,KAAKN,KAAL,CAAWO,IAAX,KAAoBD,GAAG,CAACC,IAAxB,IAAgC,KAAK7B,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmCiB,GAAG,CAACtB,IAA3E,EAAiF;AAC7EuC,UAAAA,SAAS,GAAG,IAAZ;AACH;AACJ,OAJD;;AAKA,UAAI,KAAK7C,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,EAAnC,IAAyCkC,SAAS,KAAK,IAA3D,EAAiE;AAC7D,aAAK,IAAIb,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpC,SAAS,CAACsC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACvC,cAAI,KAAKhC,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmCf,SAAS,CAACoC,CAAD,CAAT,CAAa1B,IAApD,EAA0D;AACtDV,YAAAA,SAAS,CAACkD,MAAV,CAAiBd,CAAjB,EAAoB,CAApB;AACA;AACH;AACJ;AACJ;;AACD,WAAKV,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AACH,KA1LkC;;AAAA,SA4LnCD,EA5LmC,GA4L9B,MAAM;AACP,UAAIC,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAA7C;AACA,UAAI8C,KAAK,GAAG,KAAZ;AACA,UAAIC,MAAM,GAAG,KAAb;AACApD,MAAAA,SAAS,CAAC+B,GAAV,CAAcC,GAAG,IAAI;AACjB,YAAI,KAAKN,KAAL,CAAWO,IAAX,KAAoBD,GAAG,CAACC,IAAxB,IAAgC,KAAK7B,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmCiB,GAAG,CAACtB,IAA3E,EAAiF;AAC7EyC,UAAAA,KAAK,GAAG,IAAR;AACH;AACJ,OAJD;;AAKA,UAAI,KAAK/C,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,EAAnC,IAAyCoC,KAAK,KAAK,IAAvD,EAA6D;AACzD,aAAK,IAAIf,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGpC,SAAS,CAACsC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AACvC,cAAI,KAAKhC,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmCf,SAAS,CAACoC,CAAD,CAAT,CAAa1B,IAApD,EAA0D;AACtDV,YAAAA,SAAS,CAACkD,MAAV,CAAiBd,CAAjB,EAAoB,CAApB;AACA;AACH;AACJ;AACJ;;AACD,UAAIe,KAAK,KAAK,KAAd,EAAqB;AACjBlD,QAAAA,IAAI,CAAC8B,GAAL,CAASW,CAAC,IAAI;AACV,cAAI,KAAKhB,KAAL,CAAWO,IAAX,KAAoBS,CAAC,CAACT,IAAtB,IAA8B,KAAK7B,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC2B,CAAC,CAAChC,IAAvE,EAA6E;AACzE0C,YAAAA,MAAM,GAAG,IAAT;AACH;AACJ,SAJD;;AAKA,YAAI,KAAKhD,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC,EAAnC,IAAyCqC,MAAM,KAAK,IAAxD,EAA8D;AAC1D,eAAK,IAAIhB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnC,IAAI,CAACqC,MAAzB,EAAiCF,CAAC,EAAlC,EAAsC;AAClC,gBAAI,KAAKhC,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmCd,IAAI,CAACmC,CAAD,CAAJ,CAAQ1B,IAA/C,EAAqD;AACjDT,cAAAA,IAAI,CAACiD,MAAL,CAAYd,CAAZ,EAAe,CAAf;AACA;AACH;AACJ;AACJ;AACJ;;AACD,WAAKV,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AACH,KA7NkC;;AAAA,SA8NnC4B,GA9NmC,GA8N7B,MAAK;AACP,UAAI5B,CAAC,GAAG,KAAKC,KAAL,CAAWC,MAAX,GAAoB,GAApB,GAA0B,KAAKvB,KAAL,CAAWC,KAArC,GAA4C,IAApD;AACAJ,MAAAA,IAAI,CAAC8B,GAAL,CAASW,CAAC,IAAI;AACV,YAAI,KAAKhB,KAAL,CAAWO,IAAX,KAAoBS,CAAC,CAACT,IAAtB,IAA8B,KAAK7B,KAAL,CAAWC,KAAX,CAAiBU,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,MAAmC2B,CAAC,CAAChC,IAAvE,EAA6E;AACzEe,UAAAA,CAAC,IAAGiB,CAAJ;AACH;AACJ,OAJD;AAKA,WAAKhB,KAAL,CAAWE,cAAX,CAA0BH,CAA1B;AACH,KAtOkC;AAAA;;AAuOnC6B,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA,kBACK,KAAK5B,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,UAA7B;AACI,QAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,KADtB;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,QAAQ,EAAE,KAAKC,QAHnB;AAII,QAAA,SAAS,EAAEC,CAAC,IAAI;AACZ,cAAIA,CAAC,CAACO,GAAF,KAAU,OAAd,EAAuB;AACnB,iBAAKF,SAAL,CAAeL,CAAf;AACA,iBAAKmB,KAAL,CAAW6B,eAAX,CAA2B,KAAKnD,KAAL,CAAWC,KAAtC;AACH;AACJ;AATL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH;;AA3PkC;;AA+PvC,eAAeH,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\"\n\n\nimport directory from \"./directory\"\nimport file from \"./file\"\n\n\n\nclass Commands extends React.Component {\n    state = {\n        title: \"\",\n    }\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    listenCmd = event => {\n\n        if (event.key === \"Enter\") {\n            if (this.state.title.split(\" \")[0] === \"ls\") {\n                this.ls()\n            }\n            else if (this.state.title.split(\" \")[0] === \"history\") {\n                this.history()\n            } else if (this.state.title.split(\" \")[0] === \"pwd\") {\n                this.pwd()\n            } else if (this.state.title.split(\" \")[0] === \"cd\") {\n                this.cd()\n            } else if (this.state.title.split(\" \")[0] === \"touch\") {\n                this.touch()\n            } else if (this.state.title.split(\" \")[0] === \"mv\") {\n                this.mv()\n            } else if (this.state.title.split(\" \")[0] === \"mkdir\") {\n                this.mkdir()\n            } else if (this.state.title.split(\" \")[0] === \"rmdir\") {\n                this.rmdir()\n            } else if (this.state.title.split(\" \")[0] === \"rm\") {\n                this.rm()\n            } else {\n                var d = this.props.prompt + \" \" + this.state.title;\n                this.props.addCommandPops(d)\n            }\n            this.setState({\n                command: this.state.title,\n                title: \"\"\n            })\n        }\n    }\n    //commands\n    ls = () => {\n\n        var d = this.props.prompt + \" \" + this.state.title + \"\\n\"\n        var isDirectory = false\n        directory.map(dir => {\n            if (dir.path === this.props.path) {\n                d += dir.name + \"     \";\n                isDirectory = true\n            }\n        })\n        if (isDirectory === true) {\n            d += \"\\n\"\n        }\n        file.map(file => {\n            if (file.path === this.props.path) {\n                d += file.name + \"      \";\n            }\n        })\n        console.log(d)\n        this.props.addCommandPops(d)\n\n    }\n    history = () => {\n        var d = this.props.prompt + \" \" + this.state.title + \"\\n\"\n        var i = 0;\n        this.props.history.map(his => {\n            if (this.props.history.length - 1 === i) {\n                d += his.title\n            } else {\n                d += his.title + \"\\n\"\n            }\n            i++;\n        })\n        this.props.addCommandPops(d)\n    }\n    pwd = () => {\n        var d = this.props.prompt + \" \" + this.state.title + \"\\n\"\n        d += this.props.path\n        this.props.addCommandPops(d)\n    }\n    cd = () => {\n        var d = this.props.prompt + \" \" + this.state.title\n        if (this.state.title.split(\" \")[1] === \"..\") {\n            this.props.changePathProp(\"/home/user\")\n        } else if (this.state.title.split(\" \")[1] === \"-\") {\n            this.props.changePathProp(this.props.prevPath)\n        } else {\n            directory.map(dir => {\n                if (dir.name === this.state.title.split(\" \")[1] && dir.path === this.props.path) {\n                    this.props.changePathProp(this.props.path + \"/\" + dir.name)\n                }\n            })\n        }\n        this.props.addCommandPops(d)\n    }\n    touch = () => {\n        var d = this.props.prompt + \" \" + this.state.title\n        var addFile = true\n        file.map(f => {\n            if (this.props.path === f.path && this.state.title.split(\" \")[1] === f.name) {\n                addFile = false\n            }\n        })\n        if (this.state.title.split(\" \")[1] !== \"\" && addFile === true) {\n\n            const newFile = {\n                name: this.state.title.split(\" \")[1],\n                permissions: \"\",\n                path: this.props.path,\n                text:\"\",\n            }\n\n            file.push(newFile)\n        }\n        // file.map(f =>{\n        //     console.log(f.name)\n        // })\n        this.props.addCommandPops(d)\n    }\n    mv = () => {\n        var d = this.props.prompt + \" \" + this.state.title\n        if (this.state.title.split(\" \")[1] !== \"\") {\n            var isDirectory = true\n            file.map(f => {\n                if (f.name === this.state.title.split(\" \")[1] && f.path === this.props.path) {\n                    directory.map(dir => {\n                        if (dir.name === this.state.title.split(\" \")[2]) {\n                            f.path += \"/\" + this.state.title.split(\" \")[2]\n                            isDirectory = false\n                        }\n                    })\n                    if (isDirectory === true) {\n                        f.name = this.state.title.split(\" \")[2]\n                    }\n                }\n            })\n        }\n\n        file.map(f => {\n            console.log(f.name + \"    \" + f.path)\n        })\n        this.props.addCommandPops(d)\n    }\n    mkdir = () => {\n        var d = this.props.prompt + \" \" + this.state.title\n        var addDir = true\n        directory.map(dir => {\n            if (this.props.path === dir.path && this.state.title.split(\" \")[1] === dir.name) {\n                addDir = false\n            }\n        })\n        if (this.state.title.split(\" \")[1] !== \"\" && addDir === true) {\n\n            const newDir = {\n                name: this.state.title.split(\" \")[1],\n                permissions: \"\",\n                path: this.props.path,\n            }\n\n            directory.push(newDir)\n        }\n        // directory.map(f =>{\n        //     console.log(f.name)\n        // })\n        this.props.addCommandPops(d)\n    }\n    rmdir = () => {\n        var d = this.props.prompt + \" \" + this.state.title\n        var deleteDir = false\n        directory.map(dir => {\n            if (this.props.path === dir.path && this.state.title.split(\" \")[1] === dir.name) {\n                deleteDir = true\n            }\n        })\n        if (this.state.title.split(\" \")[1] !== \"\" && deleteDir === true) {\n            for (var i = 0; i < directory.length; i++) {\n                if (this.state.title.split(\" \")[1] === directory[i].name) {\n                    directory.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this.props.addCommandPops(d)\n    }\n\n    rm = () => {\n        var d = this.props.prompt + \" \" + this.state.title\n        var isDir = false\n        var isFile = false\n        directory.map(dir => {\n            if (this.props.path === dir.path && this.state.title.split(\" \")[1] === dir.name) {\n                isDir = true\n            }\n        })\n        if (this.state.title.split(\" \")[1] !== \"\" && isDir === true) {\n            for (var i = 0; i < directory.length; i++) {\n                if (this.state.title.split(\" \")[1] === directory[i].name) {\n                    directory.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        if (isDir === false) {\n            file.map(f => {\n                if (this.props.path === f.path && this.state.title.split(\" \")[1] === f.name) {\n                    isFile = true\n                }\n            })\n            if (this.state.title.split(\" \")[1] !== \"\" && isFile === true) {\n                for (var i = 0; i < file.length; i++) {\n                    if (this.state.title.split(\" \")[1] === file[i].name) {\n                        file.splice(i, 1);\n                        break;\n                    }\n                }\n            }\n        }\n        this.props.addCommandPops(d)\n    }\n    cat = () =>{\n        var d = this.props.prompt + \" \" + this.state.title +\"\\n\"\n        file.map(f => {\n            if (this.props.path === f.path && this.state.title.split(\" \")[1] === f.name) {\n                d+= f\n            }\n        })\n        this.props.addCommandPops(d)\n    }\n    render() {\n\n        return (\n            <div className=\"lineCmd\">\n                <span>\n                    {this.props.prompt}\n                </span>\n                <input type=\"text\" className=\"inputCmd\"\n                    value={this.state.title}\n                    name=\"title\"\n                    onChange={this.onChange}\n                    onKeyDown={e => {\n                        if (e.key === \"Enter\") {\n                            this.listenCmd(e)\n                            this.props.addHistoryProps(this.state.title)\n                        }\n                    }}>\n                </input>\n            </div>\n        )\n    }\n}\n\n\nexport default Commands\n\n\n// handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }\n"]},"metadata":{},"sourceType":"module"}