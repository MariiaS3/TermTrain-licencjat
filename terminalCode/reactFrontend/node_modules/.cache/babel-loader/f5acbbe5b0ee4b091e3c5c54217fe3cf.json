{"ast":null,"code":"var _jsxFileName = \"/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport directory from \"./directory\";\nimport file from \"./file\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Commands extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      title: \"\"\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.listenCmd = event => {\n      if (event.key === \"Enter\") {\n        if (this.state.title.split(\" \")[0] === \"ls\") {\n          this.ls();\n        } else if (this.state.title.split(\" \")[0] === \"history\") {\n          this.history();\n        } else if (this.state.title.split(\" \")[0] === \"pwd\") {\n          this.pwd();\n        } else if (this.state.title.split(\" \")[0] === \"cd\") {\n          this.cd();\n        } else if (this.state.title.split(\" \")[0] === \"touch\") {\n          this.touch();\n        } else if (this.state.title.split(\" \")[0] === \"mv\") {\n          this.mv();\n        } else if (this.state.title.split(\" \")[0] === \"mkdir\") {\n          this.mkdir();\n        } else {\n          var d = this.props.prompt + \" \" + this.state.title;\n          this.props.addCommandPops(d);\n        }\n\n        this.setState({\n          command: this.state.title,\n          title: \"\"\n        });\n      }\n    };\n\n    this.ls = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\\n\";\n      var isDirectory = false;\n      directory.map(dir => {\n        if (dir.path === this.props.path) {\n          d += dir.name + \"     \";\n          isDirectory = true;\n        }\n      });\n\n      if (isDirectory === true) {\n        d += \"\\n\";\n      }\n\n      file.map(file => {\n        if (file.path === this.props.path) {\n          d += file.name + \"      \";\n        }\n      });\n      console.log(d);\n      this.props.addCommandPops(d);\n    };\n\n    this.history = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\\n\";\n      var i = 0;\n      this.props.history.map(his => {\n        if (this.props.history.length - 1 === i) {\n          d += his.title;\n        } else {\n          d += his.title + \"\\n\";\n        }\n\n        i++;\n      });\n      this.props.addCommandPops(d);\n    };\n\n    this.pwd = () => {\n      var d = this.props.prompt + \" \" + this.state.title + \"\\n\";\n      d += this.props.path;\n      this.props.addCommandPops(d);\n    };\n\n    this.cd = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n\n      if (this.state.title.split(\" \")[1] === \"..\") {\n        this.props.changePathProp(\"/home/user\");\n      } else if (this.state.title.split(\" \")[1] === \"-\") {\n        this.props.changePathProp(this.props.prevPath);\n      } else {\n        directory.map(dir => {\n          if (dir.name === this.state.title.split(\" \")[1] && dir.path === this.props.path) {\n            this.props.changePathProp(this.props.path + \"/\" + dir.name);\n          }\n        });\n      }\n\n      this.props.addCommandPops(d);\n    };\n\n    this.touch = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n      var addFile = true;\n      file.map(f => {\n        if (this.props.path === f.path && this.state.title.split(\" \")[1] === f.name) {\n          addFile = false;\n        }\n      });\n\n      if (this.state.title.split(\" \")[1] !== \"\" && addFile === true) {\n        const newFile = {\n          name: this.state.title.split(\" \")[1],\n          permissions: \"\",\n          path: this.props.path\n        };\n        file.push(newFile);\n      } // file.map(f =>{\n      //     console.log(f.name)\n      // })\n\n\n      this.props.addCommandPops(d);\n    };\n\n    this.mv = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n\n      if (this.state.title.split(\" \")[1] !== \"\") {\n        var isDirectory = true;\n        file.map(f => {\n          if (f.name === this.state.title.split(\" \")[1] && f.path === this.props.path) {\n            directory.map(dir => {\n              if (dir.name === this.state.title.split(\" \")[2]) {\n                f.path += \"/\" + this.state.title.split(\" \")[2];\n                isDirectory = false;\n              }\n            });\n\n            if (isDirectory === true) {\n              f.name = this.state.title.split(\" \")[2];\n            }\n          }\n        });\n      }\n\n      file.map(f => {\n        console.log(f.name + \"    \" + f.path);\n      });\n      this.props.addCommandPops(d);\n    };\n\n    this.mkdir = () => {\n      var d = this.props.prompt + \" \" + this.state.title;\n      var addDir = true;\n      directory.map(dir => {\n        if (this.props.path === dir.path && this.state.title.split(\" \")[1] === dir.name) {\n          addDir = false;\n        }\n      });\n\n      if (this.state.title.split(\" \")[1] !== \"\" && addDir === true) {\n        const newDir = {\n          name: this.state.title.split(\" \")[1],\n          permissions: \"\",\n          path: this.props.path\n        };\n        directory.push(newDir);\n      } // directory.map(f =>{\n      //     console.log(f.name)\n      // })\n\n\n      this.props.addCommandPops(d);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lineCmd\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.props.prompt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"inputCmd\",\n        value: this.state.title,\n        name: \"title\",\n        onChange: this.onChange,\n        onKeyDown: e => {\n          if (e.key === \"Enter\") {\n            this.listenCmd(e);\n            this.props.addHistoryProps(this.state.title);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Commands; // handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }","map":{"version":3,"sources":["/home/mariasydor/Documents/New Folder/terminal/react-frontend/src/components/Commands.js"],"names":["React","v4","uuidv4","directory","file","Commands","Component","state","title","onChange","e","setState","target","name","value","listenCmd","event","key","split","ls","history","pwd","cd","touch","mv","mkdir","d","props","prompt","addCommandPops","command","isDirectory","map","dir","path","console","log","i","his","length","changePathProp","prevPath","addFile","f","newFile","permissions","push","addDir","newDir","render","addHistoryProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { v4 as uuidv4 } from \"uuid\"\n\n\nimport directory from \"./directory\"\nimport file from \"./file\"\n\n\n\nclass Commands extends React.Component {\n    state = {\n        title: \"\",\n    }\n    onChange = e => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    listenCmd = event => {\n\n        if (event.key === \"Enter\") {\n            if (this.state.title.split(\" \")[0] === \"ls\") {\n                this.ls()\n            }\n            else if (this.state.title.split(\" \")[0] === \"history\") {\n                this.history()\n            } else if (this.state.title.split(\" \")[0] === \"pwd\") {\n                this.pwd()\n            } else if (this.state.title.split(\" \")[0] === \"cd\") {\n                this.cd()\n            } else if (this.state.title.split(\" \")[0] === \"touch\") {\n                this.touch()\n            }else if (this.state.title.split(\" \")[0] === \"mv\") {\n                this.mv()\n            }else if (this.state.title.split(\" \")[0] === \"mkdir\") {\n                this.mkdir()\n            } else {\n                var d = this.props.prompt + \" \" + this.state.title;\n                this.props.addCommandPops(d)\n            }\n            this.setState({\n                command: this.state.title,\n                title: \"\"\n            })\n        }\n    }\n    //commands\n    ls = () => {\n\n        var d = this.props.prompt + \" \" + this.state.title + \"\\n\"\n        var isDirectory = false\n        directory.map(dir => {\n            if (dir.path === this.props.path) {\n                d += dir.name + \"     \";\n                isDirectory =true\n            }\n        })\n        if(isDirectory===true){\n            d += \"\\n\"\n        }\n        file.map(file => {\n            if (file.path === this.props.path) {\n                d += file.name + \"      \";\n            }\n        })\n        console.log(d)\n        this.props.addCommandPops(d)\n\n    }\n    history = () => {\n        var d = this.props.prompt + \" \" + this.state.title + \"\\n\"\n        var i = 0;\n        this.props.history.map(his => {\n            if (this.props.history.length - 1 === i) {\n                d += his.title\n            } else {\n                d += his.title + \"\\n\"\n            }\n            i++;\n        })\n        this.props.addCommandPops(d)\n    }\n    pwd = () => {\n        var d = this.props.prompt + \" \" + this.state.title + \"\\n\"\n        d += this.props.path\n        this.props.addCommandPops(d)\n    }\n    cd = () => {\n        var d = this.props.prompt + \" \" + this.state.title\n        if (this.state.title.split(\" \")[1] === \"..\") {\n            this.props.changePathProp(\"/home/user\")\n        } else if (this.state.title.split(\" \")[1] === \"-\") {\n            this.props.changePathProp(this.props.prevPath)\n        } else {\n            directory.map(dir => {\n                if (dir.name === this.state.title.split(\" \")[1] && dir.path === this.props.path) {\n                    this.props.changePathProp(this.props.path + \"/\" + dir.name)\n                }\n            })\n        }\n        this.props.addCommandPops(d)\n    }\n    touch = () => {\n        var d = this.props.prompt + \" \" + this.state.title\n        var addFile = true\n        file.map(f =>{\n            if(this.props.path === f.path && this.state.title.split(\" \")[1] === f.name){\n                addFile = false\n            }\n        })\n        if (this.state.title.split(\" \")[1] !== \"\" && addFile===true) {\n\n            const newFile = {\n                name: this.state.title.split(\" \")[1],\n                permissions: \"\",\n                path: this.props.path,\n            }\n\n            file.push(newFile)\n        }\n        // file.map(f =>{\n        //     console.log(f.name)\n        // })\n        this.props.addCommandPops(d)\n    }\n    mv = () => {\n        var d = this.props.prompt + \" \" + this.state.title\n        if (this.state.title.split(\" \")[1] !== \"\") {\n            var isDirectory =true\n            file.map(f => {\n                if (f.name === this.state.title.split(\" \")[1] && f.path === this.props.path) {\n                    directory.map(dir =>{\n                        if(dir.name ===  this.state.title.split(\" \")[2]){\n                            f.path  += \"/\"+ this.state.title.split(\" \")[2]\n                            isDirectory =false\n                        }\n                    })\n                    if(isDirectory===true){\n                        f.name  = this.state.title.split(\" \")[2]\n                    }\n                }\n            })\n        }\n\n         file.map(f =>{\n            console.log(f.name + \"    \"+ f.path)\n        })\n        this.props.addCommandPops(d)\n    }\n    mkdir = () =>{\n        var d = this.props.prompt + \" \" + this.state.title\n        var addDir = true\n        directory.map(dir =>{\n            if(this.props.path === dir.path && this.state.title.split(\" \")[1] === dir.name){\n                addDir = false\n            }\n        })\n        if (this.state.title.split(\" \")[1] !== \"\" && addDir===true) {\n\n            const newDir = {\n                name: this.state.title.split(\" \")[1],\n                permissions: \"\",\n                path: this.props.path,\n            }\n\n            directory.push(newDir)\n        }\n        // directory.map(f =>{\n        //     console.log(f.name)\n        // })\n        this.props.addCommandPops(d)\n    }\n    render() {\n\n        return (\n            <div className=\"lineCmd\">\n                <span>\n                    {this.props.prompt}\n                </span>\n                <input type=\"text\" className=\"inputCmd\"\n                    value={this.state.title}\n                    name=\"title\"\n                    onChange={this.onChange}\n                    onKeyDown={e => {\n                        if (e.key === \"Enter\") {\n                            this.listenCmd(e)\n                            this.props.addHistoryProps(this.state.title)\n                        }\n                    }}>\n                </input>\n            </div>\n        )\n    }\n}\n\n\nexport default Commands\n\n\n// handleClick() {\n//     var i = 0;\n//     var txt = 'Lorem ipsum dummy text blabla.';\n//     var speed = 50;\n//     let typeWriter = () => {\n//         if (i < txt.length) {\n//             this.setState({ text: txt.substring(0, i++) });\n//             setTimeout(typeWriter, speed);\n//         }\n//     };\n//     typeWriter();\n// }\n"]},"metadata":{},"sourceType":"module"}